version: "3.8"

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
    container_name: es01
    hostname: es01
    restart: always
    environment:
      - "ELASTIC_PASSWORD=${ES_PASSWORD}"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.name=es01
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    networks: [ "elk" ]
    healthcheck:
      test: ["CMD-SHELL", "curl -sf 'localhost:9200/_cluster/health?pretty' -u ${ES_USERNAME}:${ES_PASSWORD} | grep -E 'green|yellow'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  kb01:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
    container_name: kb01
    hostname: kb01
    restart: always
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks: [ "elk" ]
    depends_on: 
      es01:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:5601/api/status -u ${ES_USERNAME}:${ES_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  ls01:
    image: docker.elastic.co/logstash/logstash:${ES_VERSION}
    container_name: ls01
    hostname: ls01
    restart: always
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipes:/usr/share/logstash/pipeline
    command: "logstash"
    ports:
      - "5044:5044"
      - "12201:12201"
      - "9600:9600"
    networks: [ "elk" ]
    depends_on: 
      es01:
        condition: service_healthy
      kafka:
          condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf 'http://localhost:9600/_node/pipelines/apache?pretty' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  fb01:
    image: docker.elastic.co/beats/filebeat:${ES_VERSION}
    container_name: fb01
    hostname: fb01
    restart: always
    environment:
      STRICT_PERMS: "false"
    volumes:
      - ./assets/logs/:/logs
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    ports: 
      - 5066:5066
    networks: [ "elk" ]
    depends_on: 
      kafka:
        condition: service_healthy
      ls01:
        condition: service_healthy
      flog:
        condition: service_started
    healthcheck:
      test: "wc -l /usr/share/filebeat/data/registry/filebeat/log.json | cut -d' ' -f1 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  flog:
    image: mingrammer/flog:0.4.3
    container_name: flog
    hostname: flog
    restart: always
    command: -l -d 1 -f apache_common -t log -w -o /logs/apache.log
    depends_on: 
      ls01:
        condition: service_healthy
      kafka:
        condition: service_healthy
    volumes:
      - ./assets/logs:/logs

  zookeeper:
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - elk
    healthcheck:
      test: ps aux | grep zookeeper
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  kafka:
    container_name: kafka
    hostname: kafka
    restart: always
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    networks:
      - elk
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ps aux | grep kafka
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s


networks:
  elk: